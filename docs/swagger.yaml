openapi: 3.0.2
info:
    title: Predator API
    version: 1.0.0
    description: Predator API
paths:
    /criminals:
        get:
            tags:
                - criminals
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of games:
                                    value:
                                        - John Doe
                                        - Diddy
                                        - Jeffrey Epstein
                    description: Returns a list of criminals
            summary: get list of all criminals from api
            description: Returns a list of all criminals in the API to the requesting user.
        
        post:
            requestBody:
                description: Data of a criminal that the user wants to add
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Criminal'
                        examples:
                            Example of a criminal:
                                value:
                                    Name: 'Johanna'
                                    Gender: 'Female'
                                    Offence: 'Robbery'
                required: true
            tags:
                - criminals
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Criminal that is added:
                                    value:
                                        Id: 4
                                        Name: 'Johanna'
                                        Gender: 'Female'
                                        Offence: 'Robbery'
                    description: 'Return code 201 to user, if creation of new criminal was successful'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: One or multiple parameters missing
                    description: 'Return status 400 to the user, if one or multiple of parameters are missing.'
            summary: add new criminal
            description: Adds a new criminal into the array
    '/criminals/{id}':
        get:
            tags:
                - criminals
            parameters:
                -
                    examples:
                        Example of id of Criminal:
                            value: '1'
                    name: id
                    description: Id of Criminal the user has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of a criminal with details:
                                    value:
                                        Id: 1
                                        Name: 'John Doe'
                                        Gender: 'Male'
                                        Offence: 'Robbery'
                    description: Returns details of a Criminal to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid criminal id:
                                    value:
                                        -
                                            error: Invalid id inserted
                    description: Return status code 400 to the user if an invalid id was entered
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Criminal /w+ was not found:
                                    value:
                                        -
                                            error: Criminal\w+ was not found in criminal array
                    description: Return error 404 to the user if Criminal with this id is not found
            operationId: id
            summary: Get full details of a criminal
            description: Returns full details of a given id criminal
       
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Criminal'
                        examples:
                            Example of a criminal:
                                value:
                                    Id: 1
                                    Name: 'John Doe'
                                    Gender: 'Male'
                                    Offence: 'Robbery'
                required: true
            tags:
                - criminals
            parameters:
                -
                    examples:
                        Id of criminal:
                            value: '1'
                    name: id
                    description: Id of Criminal to be updated
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of a modified Criminal:
                                    value:
                                        Id: '1'
                                        Name: 'Johnny Doe'
                                        Gender: 'Male'
                                        Offence: 'Robbery'
                    description: Returns the modified Criminal to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: One or multiple parameters are missing
                    description: Criminal has not added required parameters to the modified Criminal
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing criminal:
                                    value:
                                        -
                                            error: Criminal not found
                    description: The Criminal to be updated is not found in the array
            operationId: id
            summary: Update a Criminal
            description: 'Returns updated criminal, when modification of a criminal is successful'
        
        delete:
            requestBody:
                description: id of criminal that is to be deleted
                content:
                    application/json:
                        schema:
                            type: integer
                        examples:
                            Id of Criminal to be deleted:
                                value: '1'
                required: true
            tags:
                - criminals
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                successful error:
                                    value: |4-
                                        {
                                            "error": "no content"
                                        }
                    description: 'returned error, in case deletion was successful'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Criminal /w+ was not found:
                                    value: |4-

                                            {
                                                "error": "Criminal not found"
                                            }
                    description: Criminal with this id was not found
            summary: Delete a specific criminal
            description: Deletes a criminal from the array based on given id
    # POOLELI
    /users:
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of users:
                                    value:
                                        -
                                            ID: 1
                                            Username: MariLii
                                            Firstname: Mari
                                            Lastname: Lii
                                            Email: mari@example.com
                                            SecureLevel: 0
                                            LevelKey: 0-0
                                        -
                                            ID: 2
                                            Username: LiinaTiina
                                            Firstname: Liina
                                            Lastname: Tiina
                                            Email: liina@example.com
                                            SecureLevel: 0
                                            LevelKey: 0-1
                                        -
                                            ID: 3
                                            Username: KustiLusti
                                            Firstname: Kusti
                                            Lastname: Lusti
                                            Email: kusti@example.com
                                            SecureLevel: 0
                                            LevelKey: 1-0
                                        -
                                            ID: 4
                                            Username: Admin
                                            Firstname: Admin
                                            Lastname: Administraator
                                            Email: admin@example.com
                                            SecureLevel: 1
                                            LevelKey: 0-0
                    description: sends all users to requester
            description: Retreives all users from the array
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                        examples:
                            Example of a user to be added:
                                value:
                                    Username: KrissuKiisu
                                    Firstname: Krisu
                                    Lastname: Kiisu
                                    Email: krissu@gmail.com
                                    SecureLevel: '0'
                                    LevelKey: 0-0
                required: true
            tags:
                - users
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Game'
                            examples:
                                Example of added User:
                                    value:
                                        ID: 5
                                        Username: TiiaLiia
                                        Firstname: Tiia
                                        Lastname: Liia
                                        Email: tiia@gmail.com
                                        SecureLevel: '0'
                                        LevelKey: 0-0
                    description: |
                        User was added
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                User is missing parameters:
                                    value:
                                        -
                                            error: One or multiple parameters are missing
                    description: 'When user is missing a parameter, respond with this'
            summary: Add new User
            description: New user to be added into the array
    '/users/{id}':
        get:
            tags:
                - users
            parameters:
                -
                    examples:
                        Example of id of User:
                            value: '1'
                    name: id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            examples:
                                Example of a user:
                                    value:
                                        ID: 1
                                        Username: KrissuKiisu
                                        Firstname: Krisu
                                        Lastname: Kiisu
                                        Email: krissu@gmail.com
                                        SecureLevel: 0
                                        LevelKey: 0-0
                    description: User is found by the given id
            summary: Get one user
            description: Retreives a single user with its details from the array
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                        examples:
                            Example of user:
                                value:
                                    -
                                        ID: 7
                                        Username: ''
                                        Firstname: qae8sr
                                        Lastname: jo3
                                        Email: v9uirq
                                        SecureLevel: 81
                                        LevelKey: ''
                required: true
            tags:
                - users
            parameters:
                -
                    examples:
                        Example of id of User:
                            value: '1'
                    name: id
                    description: |
                        id of user to be modified
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            examples:
                                Example of a user:
                                    value:
                                        -
                                            ID: 98
                                            Username: ''
                                            Firstname: ''
                                            Lastname: y0c
                                            Email: f
                                            SecureLevel: 94
                                            LevelKey: 12e
                    description: User has been successfully modified
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: One or multiple parameters missing
                    description: User to be modififed is missing parameters
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                User /w+ was not found:
                                    value:
                                        -
                                            error: User not found
                    description: User with this id was not found
            summary: successful
            description: modification of user has been successful
        delete:
            tags:
                - users
            parameters:
                -
                    examples:
                        Id of user to be deleted:
                            value: '1'
                    name: id
                    description: Id of user to be deleted
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Example of deleted user:
                                    value:
                                        -
                                            error: No Content
                    description: Deletion was successful
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                User /w+ was not found:
                                    value:
                                        -
                                            error: user not found
                    description: User with this id was not found
            summary: id of game to be deleted
            description: |
                User deletion from array
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        Criminal:
            title: Root Type for Criminal
            description: Example of a valid Criminal
            type: object
            properties:
                Name:
                    type: string
                Gender:
                    type: string
                Offence:
                    type: string
            example:
                Name: 'Johanna'
                Gender: 'Female'
                Offence: 'Robbery'
        User:
            title: Root Type for User
            description: Example of complete retreived user
            type: object
            properties:
                ID:
                    format: int32
                    type: integer
                Username:
                    type: string
                Firstname:
                    type: string
                Lastname:
                    type: string
                Email:
                    type: string
                SecureLevel:
                    format: int32
                    type: integer
                LevelKey:
                    type: string
            example:
                ID: 1
                Username: KrissuKiisu
                Firstname: Krisu
                Lastname: Kiisu
                Email: krissu@gmail.com
                SecureLevel: 0
                LevelKey: 0-0
